name: Branch Build igor and push
 
on:
  workflow_call:
  push:
    branches:
    - OES-1.30.x

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Xmx6g -Xms6g
  CONTAINER_REGISTRY: quay.io/opsmxpublic
  K8S_DEPLOYMENT_NAME: spin-igor
  K8S_SERVICE_NAME: igor
  K8S_NAMESPACE: cvetarget

jobs:
  branch-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
         repository: opsmx/igor-oes
         ref: refs/heads/OES-1.30.1
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Prepare build variables
        id: build_variables
        run: |
          echo ::set-output name=REPO::ubi8-igor-cve
          echo ::set-output name=VERSION::"$(git rev-parse --short HEAD)-$(date --utc +'%Y%m%d%H%M')"
      - name: Login to Quay
        uses: docker/login-action@v1
        # use service account flow defined at: https://github.com/docker/login-action#service-account-based-authentication-1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_KEY }}
      - name: Build
        env:
          ORG_GRADLE_PROJECT_version: ${{ steps.build_variables.outputs.VERSION }}
        run: |

            ./gradlew --no-daemon -PenableCrossCompilerPlugin=true igor-web:installDist -x test

            #extra_opts='"--add-opens=java.base/sun.net=ALL-UNNAMED" "--add-exports=java.base/sun.net=ALL-UNNAMED" "--add-opens=java.base/java.time=ALL-UNNAMED"'


            extra_opts='"-Djava.security.egd=file:/dev/./urandom" "-Dspring.config.import=optional:/opt/spinnaker/config/" "--add-opens=java.base/sun.net=ALL-UNNAMED" "--add-exports=java.base/sun.net=ALL-UNNAMED" "--add-opens=java.base/java.time=ALL-UNNAMED"'

            extra_opts_escaped=$(sed 's/[\/&]/\\&/g' <<< "$extra_opts")

            echo $extra_opts_escaped

            #sed "s/^\(DEFAULT_JVM_OPTS=\'.*\)\'$/\1 $extra_opts_escaped\'/" -i igor-web/build/install/igor/bin/igor


                sed "s/^\(DEFAULT_JVM_OPTS\)\s*=\s*'.*'\$/\1='$extra_opts_escaped'/" -i  igor-web/build/install/igor/bin/igor

            cat igor-web/build/install/igor/bin/igor

      - name: dockerBuildpush
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/ubi8/Dockerfile-fips
          push: true
          tags: |
            "${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{ steps.build_variables.outputs.VERSION }}"
      - name: dockerBuildpushdev
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/ubi8/Dockerfile-dev
          push: true
          tags: |
            "${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{ steps.build_variables.outputs.VERSION }}-dev"

      - name: Deploy to Kubernetes
        uses: azure/k8s-set-context@v1
        with:
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: update igor and push
        run: |
          #kubectl -n ${{ env.K8S_NAMESPACE }} exec  spin-spinnaker-halyard-0 -- bash -c "cd /home/spinnaker/.hal/default/service-settings && echo  artifactId: ${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{ steps.build_variables.outputs.VERSION }} >> ${{ env.K8S_SERVICE_NAME }}.yml"

          #kubectl -n ${{ env.K8S_NAMESPACE }} exec  spin-spinnaker-halyard-0 -- bash -c "cd /home/spinnaker/.hal/ && git config --global user.name yugaa22 && git config --global user.email yugaa22@gmail.com  && git add /home/spinnaker/.hal/default/service-settings/igor.yml && git commit -m "updating igor image" && git push && hal deploy apply"
          
          kubectl -n ${{ env.K8S_NAMESPACE }} run cve-push-pod --image=alpine/git --restart=Never --command -- sh -c "export GIT_DISCOVERY_ACROSS_FILESYSTEM=1 && apk add --no-cache git && git clone https://github.com/yugaa22/cve-target.git && git config --global user.email "yugaa22@gmail.com" && git config --global user.name "yugaa22" && touch cve-target/default/service-settings/${{ env.K8S_SERVICE_NAME }}.yml && echo  artifactId: ${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{ steps.build_variables.outputs.VERSION }} >> ${{ env.K8S_SERVICE_NAME }}.yml &&  cd cve-target/ && git add . && git commit  -m "updating igor image" && git push https://yugaa22:${{ secrets.GIT_TOKEN }}@github.com/yugaa22/cve-target.git "
          
          #kubectl rollout status deployment/${{ env.K8S_DEPLOYMENT_NAME }} -n ${{ env.K8S_NAMESPACE }}
